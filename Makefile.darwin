#---------------------------------------------------------------------------
MAKEFILE_PATH := $(abspath $(lastword ${MAKEFILE_LIST}))
MAKEFILE_DIR := $(dir ${MAKEFILE_PATH})
#---------------------------------------------------------------------------
BREW := $(shell command -v brew 2> /dev/null)
FZF_DIR := ~/.fzf
CQUERY_VERSION := 0c5f55c
CQUERY_REPO_DIR := ~/.cq/repo
CQUERY_BUILD_DIR := ~/.cq/build
CQUERY_INSTALL_PREFIX := ~/.local
#---------------------------------------------------------------------------
print-environment:
	@echo "λ  MAKEFILE_PATH: ${MAKEFILE_PATH}"
	@echo "λ  MAKEFILE_DIR: ${MAKEFILE_DIR}"
#---------------------------------------------------------------------------
install-brew:
ifndef BREW
	/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
else
	@echo "λ  Found Homebrew: ${BREW}"
endif
#---------------------------------------------------------------------------
install-cquery:
	rm -rf $(CQUERY_REPO_DIR) $(CQUERY_BUILD_DIR)
	git clone https://github.com/cquery-project/cquery.git $(CQUERY_REPO_DIR)
	cd $(CQUERY_REPO_DIR) && git checkout $(CQUERY_VERSION)
	cd $(CQUERY_REPO_DIR) && git submodule update --init --recursive
	mkdir -p $(CQUERY_BUILD_DIR) $(CQUERY_INSTALL_PREFIX)
	cd $(CQUERY_BUILD_DIR) && cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(CQUERY_INSTALL_PREFIX) $(CQUERY_REPO_DIR)
	cd $(CQUERY_BUILD_DIR) && ninja
	cd $(CQUERY_BUILD_DIR) && ninja install
#---------------------------------------------------------------------------
install-fzf:
	if [ ! -d $(FZF_DIR) ]; then \
		git clone --depth 1 https://github.com/junegunn/fzf.git $(FZF_DIR); \
	fi
	$(FZF_DIR)/install --bin
#---------------------------------------------------------------------------
install-symlinks:
	@mkdir -p ~/.config
	@mkdir -p ~/.config/oni
	@mkdir -p ~/.local
	@sh -c "[ ! -L ~/.bash_profile ] || rm ~/.bash_profile;"
	@sh -c "[ ! -L ~/.bashrc ] || rm ~/.bashrc;"
	@sh -c "[ ! -L ~/.config/nvim ] || rm -r ~/.config/nvim;"
	@sh -c "[ ! -L ~/.config/oni/config.tsx ] || rm ~/.config/oni/config.tsx;"
	@sh -c "[ ! -L ~/.ctags ] || rm -r ~/.ctags;"
	@sh -c "[ ! -L ~/.gitconfig ] || rm ~/.gitconfig;"
	@sh -c "[ ! -L ~/.gvimrc ] || rm ~/.gvimrc;"
	@sh -c "[ ! -L ~/.npmrc ] || rm ~/.npmrc;"
	@sh -c "[ ! -L ~/.profile ] || rm ~/.profile;"
	@sh -c "[ ! -L ~/.tmux ] || rm -r ~/.tmux;"
	@sh -c "[ ! -L ~/.tmux.conf ] || rm ~/.tmux.conf;"
	@sh -c "[ ! -L ~/.vim ] || rm -r ~/.vim;"
	@sh -c "[ ! -L ~/.vimrc ] || rm ~/.vimrc;"
	@ln -sf ${MAKEFILE_DIR}bash/bash_profile.symlink ~/.bash_profile
	@ln -sf ${MAKEFILE_DIR}bash/bashrc.symlink ~/.bashrc
	@ln -sf ${MAKEFILE_DIR}bash/profile.symlink ~/.profile
	@ln -sf ${MAKEFILE_DIR}other/ctags.conf ~/.ctags
	@ln -sf ${MAKEFILE_DIR}other/gitconfig.conf ~/.gitconfig
	@ln -sf ${MAKEFILE_DIR}other/npmrc.conf ~/.npmrc
	@ln -sf ${MAKEFILE_DIR}other/oni.tsx ~/.config/oni/config.tsx
	@ln -sf ${MAKEFILE_DIR}other/tmux.conf ~/.tmux.conf
	@ln -sf ${MAKEFILE_DIR}tmux ~/.tmux
	@ln -sf ${MAKEFILE_DIR}vim ~/.config/nvim
	@ln -sf ${MAKEFILE_DIR}vim ~/.vim
	@ln -sf ${MAKEFILE_DIR}vim/gui.vim ~/.gvimrc
	@ln -sf ${MAKEFILE_DIR}vim/init.vim ~/.vimrc
#---------------------------------------------------------------------------
repair:
	@echo "λ  Removing Symlinks"
	@mkdir -p ~/.config
	@mkdir -p ~/.config/oni
	@mkdir -p ~/.local
	@sh -c "[ -L ~/.bash_profile ] || rm ~/.bash_profile;"
	@sh -c "[ -L ~/.bashrc ] || rm ~/.bashrc;"
	@sh -c "[ -L ~/.config/nvim ] || rm ~/.config/nvim;"
	@sh -c "[ -L ~/.config/oni/config.tsx ] || rm ~/.config/oni/config.tsx;"
	@sh -c "[ -L ~/.ctags ] || rm ~/.ctags;"
	@sh -c "[ -L ~/.gitconfig ] || rm ~/.gitconfig;"
	@sh -c "[ -L ~/.gvimrc ] || rm ~/.gvimrc;"
	@sh -c "[ -L ~/.npmrc ] || rm ~/.npmrc;"
	@sh -c "[ -L ~/.tigrc ] || rm ~/.tigrc;"
	@sh -c "[ -L ~/.tmux ] || rm ~/.tmux;"
	@sh -c "[ -L ~/.tmux.conf ] || rm ~/.tmux.conf;"
	@sh -c "[ -L ~/.vim ] || rm ~/.vim;"
	@sh -c "[ -L ~/.vimrc ] || rm ~/.vimrc;"
	@echo "λ  Restoring default vim"
	@sudo update-alternatives --install /usr/bin/vi vi /usr/bin/vim.basic 200
	@sudo update-alternatives --install /usr/bin/vim vim /usr/bin/vim.basic 200
	@sudo update-alternatives --install /usr/bin/editor editor /usr/bin/vim.basic 200
#---------------------------------------------------------------------------
install: print-environment install-cquery install-fzf install-symlinks
#---------------------------------------------------------------------------
