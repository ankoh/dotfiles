.PHONY: reset-symlinks
#---------------------------------------------------------------------------
MAKEFILE_PATH := $(abspath $(lastword ${MAKEFILE_LIST}))
MAKEFILE_DIR := $(dir ${MAKEFILE_PATH})
#---------------------------------------------------------------------------
BREW := $(shell command -v brew 2> /dev/null)
FZF_DIR := ~/.fzf
DP_DIR := ~/.displayplacer
RUST_ANALYZER_VERSION := 2021-05-17
CCLS_VERSION := 40145807d56af48b042e8afce819f23a0d8b7058
CCLS_REPO_DIR := ~/.ccls/repo
CCLS_BUILD_DIR := ~/.ccls/build
CCLS_INSTALL_PREFIX := ~/.local
LLVM_PREFIX_PATH := /usr/local/Cellar/llvm/11.0.0/lib/cmake
NVM_VERSION=v0.36.0
#---------------------------------------------------------------------------
install-brew:
ifndef BREW
	/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
else
	@echo "Found Homebrew: ${BREW}"
endif
#---------------------------------------------------------------------------
install-nvm:
	curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/${NVM_VERSION}/install.sh | bash
#---------------------------------------------------------------------------
install-pyenv:
	curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash
#---------------------------------------------------------------------------
install-fzf:
	if [ ! -d $(FZF_DIR) ]; then \
		git clone --depth 1 https://github.com/junegunn/fzf.git $(FZF_DIR); \
	else \
		cd $(FZF_DIR) && git pull --ff-only origin master; \
	fi
	$(FZF_DIR)/install --bin
#---------------------------------------------------------------------------
install-displayplacer:
	if [ ! -d $(DP_DIR) ]; then \
		git clone --depth 1 https://github.com/ankoh/displayplacer $(DP_DIR); \
	else \
		cd $(DP_DIR) && git pull --ff-only origin master; \
	fi
	cd $(DP_DIR) && make displayplacer
#---------------------------------------------------------------------------
install-rust:
	curl https://sh.rustup.rs -sSf | bash -s -- -y
#---------------------------------------------------------------------------
install-ls-cc:
	rm -rf $(CCLS_REPO_DIR) $(CCLS_BUILD_DIR)
	git clone --recursive https://github.com/MaskRay/ccls $(CCLS_REPO_DIR)
	cd $(CCLS_REPO_DIR) && git checkout $(CCLS_VERSION)
	cd $(CCLS_REPO_DIR) && git submodule update --init --recursive
	mkdir -p $(CCLS_BUILD_DIR) $(CCLS_INSTALL_PREFIX)
	cd $(CCLS_BUILD_DIR) && cmake \
		-GNinja \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_INSTALL_PREFIX=$(CCLS_INSTALL_PREFIX) \
		-DCMAKE_PREFIX_PATH=$(LLVM_PREFIX_PATH) \
		$(CCLS_REPO_DIR)
	cd $(CCLS_BUILD_DIR) && ninja
	cd $(CCLS_BUILD_DIR) && ninja install
#---------------------------------------------------------------------------
install-ls-go:
	go get -u golang.org/x/tools/gopls
#---------------------------------------------------------------------------
install-ls-py:
	pip3 install python-language-server
#---------------------------------------------------------------------------
install-ls-ts:
	npm i -g typescript-language-server
#---------------------------------------------------------------------------
install-ls-dart:
	pub global activate dart_language_server
#---------------------------------------------------------------------------
install-ls-rs:
	rustup component add rust-src rustfmt && \
	mkdir -p ~/.local/bin/ && \
	curl -L -o ~/.local/bin/rust-analyzer https://github.com/rust-analyzer/rust-analyzer/releases/download/${RUST_ANALYZER_VERSION}/rust-analyzer-mac && \
	chmod +x ~/.local/bin/rust-analyzer
#---------------------------------------------------------------------------
fix-keyrepeat:
	defaults write com.microsoft.VSCode ApplePressAndHoldEnabled -bool false
#---------------------------------------------------------------------------
create-directories:
	@mkdir -p ~/.config
	@mkdir -p ~/.local/bin
	@mkdir -p ~/.local/include
	@mkdir -p ~/.local/lib
	@mkdir -p ~/.config/Code/User
#---------------------------------------------------------------------------
reset-symlinks: create-directories
	@sh -c "[ ! -L ~/.bash_profile ] || rm ~/.bash_profile;"
	@sh -c "[ ! -L ~/.bashrc ] || rm ~/.bashrc;"
	@sh -c "[ ! -L ~/.zshrc ] || rm ~/.zshrc;"
	@sh -c "[ ! -L ~/.config/nvim ] || rm -r ~/.config/nvim;"
	@sh -c "[ ! -L ~/.gitconfig ] || rm ~/.gitconfig;"
	@sh -c "[ ! -L ~/.gvimrc ] || rm ~/.gvimrc;"
	@sh -c "[ ! -L ~/.nvmrc ] || rm ~/.nvmrc;"
	@sh -c "[ ! -L ~/.tmux ] || rm -r ~/.tmux;"
	@sh -c "[ ! -L ~/.tmux.conf ] || rm ~/.tmux.conf;"
	@sh -c "[ ! -L ~/.vim ] || rm -r ~/.vim;"
	@sh -c "[ ! -L ~/.vimrc ] || rm ~/.vimrc;"
	@sh -c "[ ! -L ~/.alacritty ] || rm ~/.alacritty;"
	@sh -c "[ ! -L ~/.config/Code/User/settings.json ] || rm ~/.config/Code/User/settings.json;";
	@sh -c "[ ! -L ~/.config/Code/User/settings.json ] || rm ~/Library/Application\ Support/Code/User/settings.json;";
	@sh -c "[ ! -L ~/.config/Code/User/keybindings.json ] || rm ~/.config/Code/User/keybindings.json;";
	@sh -c "[ ! -L ~/.config/Code/User/keybindings.json ] || rm ~/Library/Application\ Support/Code/User/keybindings.json;";
#---------------------------------------------------------------------------
install-symlinks: reset-symlinks
	@ln -sf ${MAKEFILE_DIR}/shell/config.sh ~/.bashrc
	@ln -sf ${MAKEFILE_DIR}/shell/config.sh ~/.zshrc
	@ln -sf ${MAKEFILE_DIR}/other/gitconfig.conf ~/.gitconfig
	@ln -sf ${MAKEFILE_DIR}/other/nvmrc.conf ~/.nvmrc
	@ln -sf ${MAKEFILE_DIR}/other/alacritty.yml ~/.alacritty.yml
	@ln -sf ${MAKEFILE_DIR}/tmux ~/.tmux
	@ln -sf ${MAKEFILE_DIR}/tmux/tmux.conf ~/.tmux.conf
	@ln -sf ${MAKEFILE_DIR}/vim ~/.config/nvim
	@ln -sf ${MAKEFILE_DIR}/vim ~/.vim
	@ln -sf ${MAKEFILE_DIR}/vim/gui.vim ~/.gvimrc
	@ln -sf ${MAKEFILE_DIR}/vim/init.vim ~/.vimrc
	@ln -sf ${MAKEFILE_DIR}/vscode/settings.json ~/.config/Code/User/settings.json;
	@ln -sf ${MAKEFILE_DIR}/vscode/settings.json ~/Library/Application\ Support/Code/User/settings.json;
	@ln -sf ${MAKEFILE_DIR}/vscode/keybindings.json ~/.config/Code/User/keybindings.json;
	@ln -sf ${MAKEFILE_DIR}/vscode/keybindings.json ~/Library/Application\ Support/Code/User/keybindings.json;
#---------------------------------------------------------------------------
repair: reset-symlinks
	@sudo update-alternatives --install /usr/bin/vi vi /usr/bin/vim.basic 200
	@sudo update-alternatives --install /usr/bin/vim vim /usr/bin/vim.basic 200
	@sudo update-alternatives --install /usr/bin/editor editor /usr/bin/vim.basic 200
#---------------------------------------------------------------------------
install: install-fzf install-symlinks
#---------------------------------------------------------------------------
