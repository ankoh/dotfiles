.PHONY: reset-symlinks
#---------------------------------------------------------------------------
MAKEFILE_PATH := $(abspath $(lastword ${MAKEFILE_LIST}))
MAKEFILE_DIR := $(dir ${MAKEFILE_PATH})
#---------------------------------------------------------------------------
BREW := $(shell command -v brew 2> /dev/null)
FZF_DIR := ~/.fzf
CCLS_VERSION := 3865a0944739fff23fdaa53ec287d315f4be6edb
CCLS_REPO_DIR := ~/.ccls/repo
CCLS_BUILD_DIR := ~/.ccls/build
CCLS_INSTALL_PREFIX := ~/.local
VSCODE_SETTINGS := \
	"${HOME}/Library/Application Support/Code/User/settings.json" \
VSCODE_KEYBINGINDS := (\
	"${HOME}/Library/Application Support/Code/User/keybindings.json" \
	"${HOME}/Library/Application Support/Code - Insiders/User/keybindings.json"
#---------------------------------------------------------------------------
print-environment:
	@echo "MAKEFILE_PATH: ${MAKEFILE_PATH}"
	@echo "MAKEFILE_DIR: ${MAKEFILE_DIR}"
#---------------------------------------------------------------------------
install-brew:
ifndef BREW
	/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
else
	@echo "Found Homebrew: ${BREW}"
endif
#---------------------------------------------------------------------------
install-fzf:
	if [ ! -d $(FZF_DIR) ]; then \
		git clone --depth 1 https://github.com/junegunn/fzf.git $(FZF_DIR); \
	else \
		cd $(FZF_DIR) && git pull --ff-only origin master; \
	fi
	$(FZF_DIR)/install --bin
#---------------------------------------------------------------------------
install-ls:
	pip3 install neovim
#---------------------------------------------------------------------------
install-ls-cc:
	rm -rf $(CCLS_REPO_DIR) $(CCLS_BUILD_DIR)
	git clone --recursive https://github.com/MaskRay/ccls $(CCLS_REPO_DIR)
	cd $(CCLS_REPO_DIR) && git checkout $(CCLS_VERSION)
	cd $(CCLS_REPO_DIR) && git submodule update --init --recursive
	mkdir -p $(CCLS_BUILD_DIR) $(CCLS_INSTALL_PREFIX)
	cd $(CCLS_BUILD_DIR) && cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(CCLS_INSTALL_PREFIX) $(CCLS_REPO_DIR)
	cd $(CCLS_BUILD_DIR) && ninja
	cd $(CCLS_BUILD_DIR) && ninja install
#---------------------------------------------------------------------------
install-ls-go:
	go get -u golang.org/x/tools/cmd/golsp
#---------------------------------------------------------------------------
install-ls-py:
	pip3 install python-language-server
#---------------------------------------------------------------------------
install-ls-ts:
	npm i -g typescript-language-server
#---------------------------------------------------------------------------
install-ls-dart:
	pub global activate dart_language_server
#---------------------------------------------------------------------------
install-rust:
	curl https://sh.rustup.rs -sSf | sh
	rustup component add rls-preview rust-analysis rust-src rustfmt
#---------------------------------------------------------------------------
create-directories:
	@mkdir -p ~/.config
	@mkdir -p ~/.local
	@mkdir -p ~/.config/Code/User
#---------------------------------------------------------------------------
reset-symlinks: create-directories
	@sh -c "[ ! -L ~/.bash_profile ] || rm ~/.bash_profile;"
	@sh -c "[ ! -L ~/.bashrc ] || rm ~/.bashrc;"
	@sh -c "[ ! -L ~/.zshrc ] || rm ~/.zshrc;"
	@sh -c "[ ! -L ~/.config/nvim ] || rm -r ~/.config/nvim;"
	@sh -c "[ ! -L ~/.gitconfig ] || rm ~/.gitconfig;"
	@sh -c "[ ! -L ~/.gvimrc ] || rm ~/.gvimrc;"
	@sh -c "[ ! -L ~/.npmrc ] || rm ~/.npmrc;"
	@sh -c "[ ! -L ~/.tmux ] || rm -r ~/.tmux;"
	@sh -c "[ ! -L ~/.tmux.conf ] || rm ~/.tmux.conf;"
	@sh -c "[ ! -L ~/.vim ] || rm -r ~/.vim;"
	@sh -c "[ ! -L ~/.vimrc ] || rm ~/.vimrc;"
	@sh -c "[ ! -L ~/.alacritty ] || rm ~/.alacritty;"
	@sh -c "[ ! -L ~/.config/Code/User/settings.json ] || rm ~/.config/Code/User/settings.json;";
	@sh -c "[ ! -L ~/.config/Code/User/keybindings.json ] || rm ~/.config/Code/User/keybindings.json;";
#---------------------------------------------------------------------------
install-symlinks: reset-symlinks
	@ln -sf ${MAKEFILE_DIR}/shell/config.sh ~/.bashrc
	@ln -sf ${MAKEFILE_DIR}/shell/config.sh ~/.zshrc
	@ln -sf ${MAKEFILE_DIR}/other/gitconfig.conf ~/.gitconfig
	@ln -sf ${MAKEFILE_DIR}/other/npmrc.conf ~/.npmrc
	@ln -sf ${MAKEFILE_DIR}/other/alacritty.yml ~/.alacritty.yml
	@ln -sf ${MAKEFILE_DIR}/tmux ~/.tmux
	@ln -sf ${MAKEFILE_DIR}/tmux/tmux.conf ~/.tmux.conf
	@ln -sf ${MAKEFILE_DIR}/vim ~/.config/nvim
	@ln -sf ${MAKEFILE_DIR}/vim ~/.vim
	@ln -sf ${MAKEFILE_DIR}/vim/gui.vim ~/.gvimrc
	@ln -sf ${MAKEFILE_DIR}/vim/init.vim ~/.vimrc
	@ln -sf ${MAKEFILE_DIR}/vscode/settings.json ~/.config/Code/User/settings.json;
	@ln -sf ${MAKEFILE_DIR}/vscode/keybindings.json ~/.config/Code/User/keybindings.json;
#---------------------------------------------------------------------------
repair: reset-symlinks
	@sudo update-alternatives --install /usr/bin/vi vi /usr/bin/vim.basic 200
	@sudo update-alternatives --install /usr/bin/vim vim /usr/bin/vim.basic 200
	@sudo update-alternatives --install /usr/bin/editor editor /usr/bin/vim.basic 200
#---------------------------------------------------------------------------
install: print-environment install-fzf install-symlinks
#---------------------------------------------------------------------------
