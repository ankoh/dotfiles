#!/bin/bash

die() { echo "${0##*/}: $1" 1>&2 ; exit 1 ; }

transliterate-rx() {
    local rx=$1 chr=
    while [[ -n $rx ]] ; do
        chr=${rx:0:1}
        rx=${rx:1}
        case "$chr" in
            '/') printf '\\%c' "$chr" ;; # because / is the pattern delimiter in Vim
            '?'|'+'|'{'|'|'|'('|')') printf '\\%c' "$chr" ;;
            \\)
                chr=${rx:0:1}
                rx=${rx:1}
                case "$chr" in
                    '?'|'+'|'{'|'|'|'('|')') printf '%c' "$chr" ;;
                    *) printf '\\%c' "$chr" ;;
                esac
                ;;
            *) printf '%c' "$chr" ;;
        esac
    done
}

gg() {
    is_inside_work_tree=$( git rev-parse --is-inside-work-tree 2>&- )
    [[ $is_inside_work_tree == true ]] || set -- --no-index ${1+"$@"}
    git grep -E --heading -n ${1+"$@"}
}

ggv() {
    bindir=$(mktemp -d -t git-grep-bin)
    ln -s "$0" "$bindir/vi" || die "couldn't create temporary vi symlink"
    export GIT_GREP_OLDPATH=$PATH
    PATH=$bindir:$PATH
    gg -Ovi "$@"
}

vi() {
    local vim=$GIT_GREP_EDITOR
    export -n GIT GIT_DIR GIT_PREFIX GIT_WORK_TREE GIT_GREP_OLDPATH # HACK (except OLDPATH)
    rm "$0" || die "couldn't delete temporary symlink"
    rmdir "${0%/*}" || die "couldn't delete temporary bin directory"
    PATH=$GIT_GREP_OLDPATH
    [[ -z $vim ]] && for vim in nvim mvim ${DISPLAY:+g}vim vim ; do
        [[ `type -t $vim` == file ]] && break
    done
    [[ $1 == +/* ]] && rx=`transliterate-rx "${1#+/}"` && shift
    exec "$vim" ${rx+"+/$rx"} "$@"
}

case ${0##*/} in
    vi)  vi  "$@" ;;
    ggv) ggv "$@" ;;
    gg)  gg  "$@" ;;
    *)   die "no idea what to do when run as ${0##*/}" ;;
esac
